---
title: "Kelp canopy biomass"
description: "Satellite derived kelp canopy biomass (kg/m²) since 1984 across the coast of California, Oregon and Washington"
image: "/images/kelp-canopy_h3-map.png"
editor: visual
editor_options: 
  chunk_output_type: console
---

```{r setup, include=FALSE}
knitr::opts_chunk$set(echo = T, message = F, warning = F)
```


## make hexagon layers

```{r}
source(here::here("lib/common.R"))
# remotes::install_github("crazycapivara/h3-r")
# shelf(
#   leaftime,
#   geojsonio, geojsonlint)
shelf(h3, mapview, ncdf4, qfes/rdeck, sf, terra)
# https://crazycapivara.github.io/h3-r/
redo <- F

ply_h3_b_geo <- here("data/kelp_canopy_h3.geojson")
if (!file.exists(ply_h3_b_geo)){

  d_nc <- glue("{dir_data}/knb-lter-sbc.74.17/LandsatKelpBiomass_2022_Q2_withmetadata.nc")
  d <- nc_open(d_nc)
  
  # names(d$var) %>% paste(collapse = ", ")
  # latitude, longitude, year, quarter, biomass, biomass_se, area, area_se, passes, passes5, passes7, passes8
  
  x   <- ncvar_get(d, "longitude") # 573515
  y   <- ncvar_get(d, "latitude")  # 573515
  yr  <- ncvar_get(d, "year")    # 154
  qr  <- ncvar_get(d, "quarter") # 154
  b   <- ncvar_get(d, "biomass") # units: kg
  a   <- ncvar_get(d, "area")    # units: m^2
  b_a <- b/a # kg/m^2
  # dim(b) # 573515 x 154
  
  p <- tibble(
      x = x, y = y, id = 1:length(x)) %>% 
    st_as_sf(
      coords = c("x", "y"), # remove = F, 
      crs = 4326) 
  
  h3_resolutions <- c(3, 5, 7, 9)
  p_h3   <- tibble()
  ply_h3 <- tibble()
  for (res in h3_resolutions){ # res = h3_resolutions[1]
    
    # assign h3_index to each point
    h3_idx <- geo_to_h3(p, res)
    p_h3 <- bind_rows(
      p_h3,
      tibble(
        id       = 1:length(x),
        h3_res   = res,
        h3_index = h3_idx) )
    
    # get polygons for unique H3 indexes
    ply_h3 <- rbind(
      ply_h3,
      h3_to_geo_boundary_sf(unique(h3_idx)) %>% 
        mutate(
          h3_res = res) )
  }
  # p_h3 %>% 
  #   filter(h3_res == 3) %>% 
  #   {table(.$h3_index)}
  
  # biomass to tibble
  dimnames(b_a) <- list(
    id = 1:dim(b_a)[1],
    yr_qr = glue("{yr}_{qr}"))
  tbl_b <- as_tibble(b_a) %>% 
    rowid_to_column("id") %>% 
    replace(is.na(.), 0)
  
  # summarize biomass for all H3 resolutions and indexes
  h_b <- p_h3 %>% 
    left_join(
      tbl_b,  by = "id") %>% 
    select(-id) %>% 
    group_by(
      h3_res, h3_index) %>% 
    summarise_all(list(mean))
  
  # join biomass to polygons by h3_index
  ply_h3_b <- ply_h3 %>% 
    left_join(
      h_b,
      by = c("h3_index", "h3_res"))
  write_sf(ply_h3_b, ply_h3_b_geo, delete_dsn = T)
  
  # table(ply_h3_b$h3_res)
  #  3     5     7     9 
  # 36   211  1364 13318
  for (res in h3_resolutions){ # res = h3_resolutions[1]
    geo <- here(glue("data/kelp-canopy_h3-res{res}.geojson"))
    ply_h3_b %>% 
      filter(h3_res == res) %>% 
      write_sf(geo, delete_dsn = T)
  }
}
ply_h3_b <- read_sf(ply_h3_b_geo)

ply_h3_b %>%
  filter(h3_res == 3) %>%
  select(`2022_2`) %>% 
  mapView(
    zcol       = "2022_2",
    layer.name = "Kelp biomass<br>2022_2 (kg&#x2fm²)")
```

## make vector tiles

* example: [mapbox/tippecanoe](https://github.com/mapbox/tippecanoe#show-countries-at-low-zoom-levels-but-states-at-higher-zoom-levels) - Show countries at low zoom levels but states at higher zoom levels


```{bash, eval=F}
# here("data")
# /Users/bbest/Github/noaa-onms/cinms-ingest/data

cd /Users/bbest/Github/noaa-onms/cinms-ingest/data

opts=`--no-tile-compression --force`

tippecanoe $opts -z3 -o kelp-canopy_z3.mbtiles --coalesce-densest-as-needed kelp-canopy_h3-res3.geojson
tippecanoe $opts -Z3 -z5 -o kelp-canopy_z5.mbtiles --coalesce-densest-as-needed  kelp-canopy_h3-res5.geojson
tippecanoe $opts -Z5 -z7 -o kelp-canopy_z7.mbtiles --coalesce-densest-as-needed  kelp-canopy_h3-res7.geojson
tippecanoe $opts -Z7 -z14 -o kelp-canopy_z9.mbtiles --coalesce-densest-as-needed  kelp-canopy_h3-res9.geojson

# tile-join -f -o kelp-canopy.mbtiles kelp-canopy_z3.mbtiles kelp-canopy_z5.mbtiles kelp-canopy_z7.mbtiles kelp-canopy_z9.mbtiles

tile-join --no-tile-compression --force -e kelp-canopy_tiles kelp-canopy_z3.mbtiles kelp-canopy_z5.mbtiles kelp-canopy_z7.mbtiles kelp-canopy_z9.mbtiles

rm kelp-canopy_z*.mbtiles
```

## show vector tile map

```{r, eval=F}
# OLD: serve CORS files locally
library(beakr)

# Create an new beakr instance
beakr <- newBeakr()

# beakr pipeline
beakr %>%
  # Enable CORS
  cors() %>%
  # Respond to GET requests at the "/hi" route
  httpGET(path = "/hi", function(req, res, err) {
    print("Hello, World!")
  }) %>%
  # Respond to GET requests at the "/bye" route
  httpGET(path = "/bye", function(req, res, err) {
    print("Farewell, my friends.")
  }) %>%
  # Host the directory of static files
 serveStaticFiles("/data", here("data"), verbose = TRUE) %>%
  # Start the server on port 25118
  listen(host = "127.0.0.1", port = 25118, daemon = TRUE)

# ------------------------------------------------------------
# POINT YOUR BROWSER AT:
# * http://127.0.0.1:25118/data/my_file.txt
#
# THEN, STOP THE SERVER WITH stopServer(beakr)
# ------------------------------------------------------------

# Stop the beakr instance server
stopServer(beakr)
```


```{r}
shelf(beakr, crul, rdeck, viridis)

mb_token <- readLines("~/My Drive/private/mapbox_token_bdbest.txt")
# mb_token <- readLines("/share/data/mapbox_token_bdbest.txt")
options(rdeck.mapbox_access_token = mb_token)

# servr::httd()

# mvt_url <- "http://127.0.0.1:4321/data/kelp-canopy_tiles/{z}/{x}/{y}.pbf"
# mvt_url <- "http://127.0.0.1:25118/data/kelp-canopy_tiles/{z}/{x}/{y}.pbf"
mvt_url <- "https://noaa-onms.github.io/cinms-ingest/data/kelp-canopy_tiles/{z}/{x}/{y}.pbf"

b_max <- max(pull(ply_h3_b, `2022_2`))
bb <- st_bbox(ply_h3_b)

rdeck(
  map_style = mapbox_dark(),
  initial_bounds = bb) %>% 
  add_mvt_layer(
    id   = "kelp_biomass",
    name = "Kelp Biomass",
    data = mvt_url,
    get_fill_color = scale_color_linear(
      col = "2022_2",
      palette = viridis(6, alpha=0.5),
      limits = c(0, b_max)),
    auto_highlight = TRUE,
    pickable = TRUE,
    tooltip = c("2022_2"))
```
