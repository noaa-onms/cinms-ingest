[
  {
    "objectID": "datasets/kelp-canopy.html",
    "href": "datasets/kelp-canopy.html",
    "title": "Kelp canopy biomass",
    "section": "",
    "text": "Code\nsource(here::here(\"lib/common.R\"))\n# remotes::install_github(\"crazycapivara/h3-r\")\n# shelf(leaftime, geojsonio, geojsonlint)\nshelf(h3, mapview, ncdf4, qfes/rdeck, sf, terra)\n# https://crazycapivara.github.io/h3-r/\n\nredo <- F\n\nply_h3_b_geo <- here(\"data/kelp_canopy_h3.geojson\")\nif (!file.exists(ply_h3_b_geo)){\n\n  d_nc <- glue(\"{dir_data}/knb-lter-sbc.74.17/LandsatKelpBiomass_2022_Q2_withmetadata.nc\")\n  d <- nc_open(d_nc)\n  \n  # names(d$var) %>% paste(collapse = \", \")\n  # latitude, longitude, year, quarter, biomass, biomass_se, area, area_se, passes, passes5, passes7, passes8\n  \n  x   <- ncvar_get(d, \"longitude\") # 573515\n  y   <- ncvar_get(d, \"latitude\")  # 573515\n  yr  <- ncvar_get(d, \"year\")    # 154\n  qr  <- ncvar_get(d, \"quarter\") # 154\n  b   <- ncvar_get(d, \"biomass\") # units: kg\n  a   <- ncvar_get(d, \"area\")    # units: m^2\n  b_a <- b/a # kg/m^2\n  # dim(b) # 573515 x 154\n  \n  p <- tibble(\n      x = x, y = y, id = 1:length(x)) %>% \n    st_as_sf(\n      coords = c(\"x\", \"y\"), # remove = F, \n      crs = 4326) \n  \n  h3_resolutions <- c(3, 4, 5, 6, 7, 8)\n  p_h3   <- tibble()\n  ply_h3 <- tibble()\n  for (res in h3_resolutions){ # res = h3_resolutions[1]\n    \n    # assign h3_index to each point\n    h3_idx <- geo_to_h3(p, res)\n    p_h3 <- bind_rows(\n      p_h3,\n      tibble(\n        id       = 1:length(x),\n        h3_res   = res,\n        h3_index = h3_idx) )\n    \n    # get polygons for unique H3 indexes\n    ply_h3 <- rbind(\n      ply_h3,\n      h3_to_geo_boundary_sf(unique(h3_idx)) %>% \n        mutate(\n          h3_res = res) )\n  }\n  # p_h3 %>% \n  #   filter(h3_res == 3) %>% \n  #   {table(.$h3_index)}\n  \n  # biomass to tibble\n  dimnames(b_a) <- list(\n    id = 1:dim(b_a)[1],\n    yr_qr = glue(\"{yr}_{qr}\"))\n  tbl_b <- as_tibble(b_a) %>% \n    rowid_to_column(\"id\") %>% \n    replace(is.na(.), 0)\n  \n  # summarize biomass for all H3 resolutions and indexes\n  h_b <- p_h3 %>% \n    left_join(\n      tbl_b,  by = \"id\") %>% \n    select(-id) %>% \n    group_by(\n      h3_res, h3_index) %>% \n    summarise_all(list(mean))\n  \n  # join biomass to polygons by h3_index\n  ply_h3_b <- ply_h3 %>% \n    left_join(\n      h_b,\n      by = c(\"h3_index\", \"h3_res\"))\n  write_sf(ply_h3_b, ply_h3_b_geo, delete_dsn = T)\n  \n  # table(ply_h3_b$h3_res)\n  #  3     5     7     9 \n  # 36   211  1364 13318\n  for (res in h3_resolutions){ # res = h3_resolutions[1]\n    geo <- here(glue(\"data/kelp-canopy_h3-res{res}.geojson\"))\n    ply_h3_b %>% \n      filter(h3_res == res) %>% \n      write_sf(geo, delete_dsn = T)\n  }\n}\nply_h3_b <- read_sf(ply_h3_b_geo)\n\nply_h3_b %>%\n  filter(h3_res == 3) %>%\n  select(`2022_2`) %>% \n  mapView(\n    zcol       = \"2022_2\",\n    layer.name = \"Kelp biomass<br>2022_2 (kg&#x2fm²)\")\n\n\n\n\n\n\n\nCode\n# TODO: write point geojson"
  },
  {
    "objectID": "datasets/kelp-canopy.html#make-vector-tiles",
    "href": "datasets/kelp-canopy.html#make-vector-tiles",
    "title": "Kelp canopy biomass",
    "section": "make vector tiles",
    "text": "make vector tiles\n\nexample: mapbox/tippecanoe - Show countries at low zoom levels but states at higher zoom levels\n\n\n\nCode\n# here(\"data\")\n# /Users/bbest/Github/noaa-onms/cinms-ingest/data\n\ncd /Users/bbest/Github/noaa-onms/cinms-ingest/data\n\nopts='--no-tile-compression --force'\ntippecanoe $opts -z4 -o kelp-canopy_z3.mbtiles -l kelp-canopy_biomass --coalesce-densest-as-needed kelp-canopy_h3-res3.geojson\ntippecanoe $opts -Z5 -z6 -o kelp-canopy_z4.mbtiles -l kelp-canopy_biomass --coalesce-densest-as-needed --extend-zooms-if-still-dropping kelp-canopy_h3-res4.geojson\ntippecanoe $opts -Z7 -z8 -o kelp-canopy_z5.mbtiles -l kelp-canopy_biomass --coalesce-densest-as-needed --extend-zooms-if-still-dropping kelp-canopy_h3-res5.geojson\ntippecanoe $opts -Z9 -z10 -o kelp-canopy_z6.mbtiles -l kelp-canopy_biomass --coalesce-densest-as-needed --extend-zooms-if-still-dropping kelp-canopy_h3-res6.geojson\ntippecanoe $opts -Z11 -z12 -o kelp-canopy_z7.mbtiles -l kelp-canopy_biomass --coalesce-densest-as-needed --extend-zooms-if-still-dropping kelp-canopy_h3-res7.geojson\ntippecanoe $opts -Z13 -z16 -o kelp-canopy_z8.mbtiles -l kelp-canopy_biomass --coalesce-densest-as-needed --extend-zooms-if-still-dropping kelp-canopy_h3-res8.geojson\n\n# TODO: tile point geojson\n\ntile-join --no-tile-compression --force -e kelp-canopy_tiles kelp-canopy_z3.mbtiles kelp-canopy_z4.mbtiles kelp-canopy_z5.mbtiles kelp-canopy_z6.mbtiles kelp-canopy_z7.mbtiles kelp-canopy_z8.mbtiles"
  },
  {
    "objectID": "datasets/kelp-canopy.html#show-vector-tile-map",
    "href": "datasets/kelp-canopy.html#show-vector-tile-map",
    "title": "Kelp canopy biomass",
    "section": "show vector tile map",
    "text": "show vector tile map\n\n\nCode\n# DEBUG: serve CORS files locally\nlibrarian::shelf(beakr)\n\n# Create an new beakr instance\nbeakr <- newBeakr()\nbeakr %>%\n  cors() %>%\n  serveStaticFiles(\"/data\", here(\"data\"), verbose = TRUE) %>%\n  listen(host = \"127.0.0.1\", port = 25118, daemon = TRUE)\n\n# ------------------------------------------------------------\n# POINT YOUR BROWSER AT:\n# * http://127.0.0.1:25118/data/my_file.txt\n#\n# THEN, STOP THE SERVER WITH stopServer(beakr)\n# ------------------------------------------------------------\n\n# Stop the beakr instance server\n# stopServer(beakr)\n\n\n\n\n\nCode\nshelf(beakr, crul, rdeck, viridis)\n\nmb_token <- readLines(\"~/My Drive/private/mapbox_token_bdbest.txt\")\n# mb_token <- readLines(\"/share/data/mapbox_token_bdbest.txt\")\noptions(rdeck.mapbox_access_token = mb_token)\n\nmvt_url <- \"https://noaa-onms.github.io/cinms-ingest/data/kelp-canopy_tiles/{z}/{x}/{y}.pbf\"\n# DEBUG: with local tiles \n# mvt_url <- \"http://127.0.0.1:25118/data/kelp-canopy_tiles/{z}/{x}/{y}.pbf\"\n\n\nb_max <- max(pull(ply_h3_b, `2022_2`))\nbb <- st_bbox(ply_h3_b)\n\nrdeck(\n  height = 800,\n  map_style = mapbox_dark(),\n  initial_bounds = bb) %>% \n  add_mvt_layer(\n    id   = \"kelp_biomass\",\n    name = \"Kelp biomass (kg/m²)\",\n    data = mvt_url,\n    get_fill_color = scale_color_linear(\n      col = \"2022_2\",\n      palette = viridis(6, alpha=0.5),\n      limits = c(0, b_max)),\n    auto_highlight = TRUE,\n    pickable = TRUE,\n    tooltip = c(\"2022_2\"))\n\n\n\n\n\n\nCode\n# TODO: time slider"
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "CINMS ingest",
    "section": "",
    "text": "Kelp canopy biomass\n\n\nSatellite derived kelp canopy biomass (kg/m²) since 1984 across the coast of California, Oregon and Washington\n\n\n\n\n\n\n\n\n\n\n\n\nNo matching items"
  },
  {
    "objectID": "about.html",
    "href": "about.html",
    "title": "About",
    "section": "",
    "text": "Code\n1 + 1\n\n\n[1] 2"
  },
  {
    "objectID": "datasets/kelp-canopy.html#next-steps",
    "href": "datasets/kelp-canopy.html#next-steps",
    "title": "Kelp canopy biomass",
    "section": "next steps",
    "text": "next steps\n\n\nadd points at finest zoom level\n\nadd land layer to map obscuring portion of hexagons on land\n\nadd time slider, initially as Shiny app (easiest), secondly as JS in html\n\nallow for arbitrary extraction by area of interest (AOI)"
  }
]